{
  "name": "ast-transform",
  "description": "Convenience wrapper for performing AST transformations with browserify transform streams",
  "version": "0.0.0",
  "main": "index.js",
  "dependencies": {
    "through": "~2.3.4",
    "esprima": "~1.0.4",
    "escodegen": "~1.2.0"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughsk.io/"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/ast-transform"
  },
  "bugs": {
    "url": "https://github.com/hughsk/ast-transform/issues"
  },
  "homepage": "https://github.com/hughsk/ast-transform",
  "keywords": [
    "ast",
    "transform",
    "browserify",
    "stream"
  ],
  "readme": "# ast-transform [![Flattr this!](https://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=hughskennedy&url=http://github.com/hughsk/ast-transform&title=ast-transform&description=hughsk/ast-transform%20on%20GitHub&language=en_GB&tags=flattr,github,javascript&category=software)[![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\n\nConvenience wrapper for performing AST transformations with\n[browserify](http://browserify.org/) transform streams. Note that it doesn't\nhandle source maps nicely, though pull requests are welcome!\n\n## Usage ##\n\n[![ast-transform](https://nodei.co/npm/ast-transform.png?mini=true)](https://nodei.co/npm/ast-transform)\n\n### `ast(transform[, opts])` ###\n\nWhere `transform` is a function that takes a filename and returns a function,\ne.g.:\n\n``` javascript\nvar replace = require('replace-method')\nvar ast = require('ast-transform')\nvar path = require('path')\n\nmodule.exports = ast(function (file) {\n  if (path.extname(file) !== '.js') return\n\n  return function(ast, done) {\n    // replace require calls with\n    // strings for some reason\n    replace(ast)(['require'], function(node) {\n      return { type: 'Literal', value: 'replaced!' }\n    })\n\n    done()\n  }\n})\n```\n\nNote that you can return a falsey value instead of a function to bail the\nstream early and avoid the parse/deparse overhead. Here's an example of using\nthe above with browserify:\n\n``` javascript\nvar browserify = require('browserify')\nvar example = require('./example')\nvar fs = require('fs')\n\nbrowserify('./index.js')\n  .transform(example)\n  .bundle()\n  .pipe(fs.createWriteStream(__filename + '/bundle.js'))\n```\n\n## License ##\n\nMIT. See [LICENSE.md](http://github.com/hughsk/ast-transform/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "ast-transform@0.0.0",
  "dist": {
    "shasum": "d890b0c912c79e6bd8520f1fea67ec08e62799cd"
  },
  "_from": "ast-transform@0.0.0",
  "_resolved": "https://registry.npmjs.org/ast-transform/-/ast-transform-0.0.0.tgz"
}
